<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.dao.OpinionEventSourceTrendDao">
  <resultMap id="BaseResultMap" type="com.bbd.domain.OpinionEventSourceTrend">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="event_id" jdbcType="BIGINT" property="eventId" />
    <result column="source_type" jdbcType="VARCHAR" property="sourceType" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="warn_count" jdbcType="INTEGER" property="warnCount" />
    <result column="pick_time" jdbcType="TIMESTAMP" property="pickTime" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, event_id, source_type, count, warn_count, pick_time, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.bbd.domain.OpinionEventSourceTrendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_opinion_event_source_trend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bbd_opinion_event_source_trend
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bbd_opinion_event_source_trend
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bbd.domain.OpinionEventSourceTrend">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_opinion_event_source_trend (event_id, source_type, count, 
      warn_count, pick_time, gmt_create, 
      gmt_modified)
    values (#{eventId,jdbcType=BIGINT}, #{sourceType,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, 
      #{warnCount,jdbcType=INTEGER}, #{pickTime,jdbcType=TIMESTAMP}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bbd.domain.OpinionEventSourceTrend">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_opinion_event_source_trend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eventId != null">
        event_id,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="warnCount != null">
        warn_count,
      </if>
      <if test="pickTime != null">
        pick_time,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eventId != null">
        #{eventId,jdbcType=BIGINT},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="warnCount != null">
        #{warnCount,jdbcType=INTEGER},
      </if>
      <if test="pickTime != null">
        #{pickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update bbd_opinion_event_source_trend
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.eventId != null">
        event_id = #{record.eventId,jdbcType=BIGINT},
      </if>
      <if test="record.sourceType != null">
        source_type = #{record.sourceType,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.warnCount != null">
        warn_count = #{record.warnCount,jdbcType=INTEGER},
      </if>
      <if test="record.pickTime != null">
        pick_time = #{record.pickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbd_opinion_event_source_trend
    set id = #{record.id,jdbcType=BIGINT},
      event_id = #{record.eventId,jdbcType=BIGINT},
      source_type = #{record.sourceType,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      warn_count = #{record.warnCount,jdbcType=INTEGER},
      pick_time = #{record.pickTime,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbd.domain.OpinionEventSourceTrend">
    update bbd_opinion_event_source_trend
    <set>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=BIGINT},
      </if>
      <if test="sourceType != null">
        source_type = #{sourceType,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="warnCount != null">
        warn_count = #{warnCount,jdbcType=INTEGER},
      </if>
      <if test="pickTime != null">
        pick_time = #{pickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbd.domain.OpinionEventSourceTrend">
    update bbd_opinion_event_source_trend
    set event_id = #{eventId,jdbcType=BIGINT},
      source_type = #{sourceType,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      warn_count = #{warnCount,jdbcType=INTEGER},
      pick_time = #{pickTime,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithPageBounds" parameterType="com.bbd.domain.OpinionEventSourceTrendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_opinion_event_source_trend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <resultMap id="GraphMap" type="com.bbd.domain.Graph">
  </resultMap>
  <select id="selectBySourceAndCycle" resultMap="GraphMap">
	SELECT 
	<if test="sourceType != null">
     b.`name` AS category,
    </if>
    <if test="sourceType == null">
     '全部' AS category,
    </if>
	`pick_time` AS TIME, 
	<if test="isInfo != null">
     SUM(`count`) AS VALUE
    </if>
	<if test="isInfo == null">
     SUM(`warn_count`) AS VALUE
    </if> 
	FROM `bbd_opinion_event_source_trend` a, `bbd_opinion_dictionary` b 
	WHERE a.`source_type`=b.`code` AND `parent`='F' 
	<if test="sourceType != null">
     AND a.`source_type`=#{sourceType} 
    </if>
	AND `event_id`=#{id} AND `pick_time` >=DATE_SUB(NOW(),INTERVAL #{days} DAY) 
	GROUP BY `pick_time`
  </select>
</mapper>