<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.dao.WarnSettingDao">
  <resultMap id="BaseResultMap" type="com.bbd.domain.WarnSetting">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="target_type" jdbcType="TINYINT" property="targetType" />
    <result column="event_id" jdbcType="BIGINT" property="eventId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="popup" jdbcType="TINYINT" property="popup" />
    <result column="min" jdbcType="INTEGER" property="min" />
    <result column="max" jdbcType="INTEGER" property="max" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="modified_by" jdbcType="BIGINT" property="modifiedBy" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, target_type, event_id, name, level, popup, min, max, create_by, modified_by, 
    gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.bbd.domain.WarnSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_warn_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bbd_warn_setting
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bbd_warn_setting
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bbd.domain.WarnSetting">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_warn_setting (type, target_type, event_id, 
      name, level, popup, 
      min, max, create_by, 
      modified_by, gmt_create, gmt_modified
      )
    values (#{type,jdbcType=TINYINT}, #{targetType,jdbcType=TINYINT}, #{eventId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{level,jdbcType=TINYINT}, #{popup,jdbcType=TINYINT}, 
      #{min,jdbcType=INTEGER}, #{max,jdbcType=INTEGER}, #{createBy,jdbcType=BIGINT}, 
      #{modifiedBy,jdbcType=BIGINT}, NOW(), #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bbd.domain.WarnSetting">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_warn_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        type,
      </if>
      <if test="targetType != null">
        target_type,
      </if>
      <if test="eventId != null">
        event_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="popup != null">
        popup,
      </if>
      <if test="min != null">
        min,
      </if>
      <if test="max != null">
        max,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="modifiedBy != null">
        modified_by,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="targetType != null">
        #{targetType,jdbcType=TINYINT},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="popup != null">
        #{popup,jdbcType=TINYINT},
      </if>
      <if test="min != null">
        #{min,jdbcType=INTEGER},
      </if>
      <if test="max != null">
        #{max,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update bbd_warn_setting
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.targetType != null">
        target_type = #{record.targetType,jdbcType=TINYINT},
      </if>
      <if test="record.eventId != null">
        event_id = #{record.eventId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.popup != null">
        popup = #{record.popup,jdbcType=TINYINT},
      </if>
      <if test="record.min != null">
        min = #{record.min,jdbcType=INTEGER},
      </if>
      <if test="record.max != null">
        max = #{record.max,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedBy != null">
        modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbd_warn_setting
    set id = #{record.id,jdbcType=BIGINT},
      type = #{record.type,jdbcType=TINYINT},
      target_type = #{record.targetType,jdbcType=TINYINT},
      event_id = #{record.eventId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=TINYINT},
      popup = #{record.popup,jdbcType=TINYINT},
      min = #{record.min,jdbcType=INTEGER},
      max = #{record.max,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=BIGINT},
      modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbd.domain.WarnSetting">
    update bbd_warn_setting
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="targetType != null">
        target_type = #{targetType,jdbcType=TINYINT},
      </if>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="popup != null">
        popup = #{popup,jdbcType=TINYINT},
      </if>
      <if test="min != null">
        min = #{min,jdbcType=INTEGER},
      </if>
      <if test="max != null">
        max = #{max,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedBy != null">
        modified_by = #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbd.domain.WarnSetting">
    update bbd_warn_setting
    set type = #{type,jdbcType=TINYINT},
      target_type = #{targetType,jdbcType=TINYINT},
      event_id = #{eventId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT},
      popup = #{popup,jdbcType=TINYINT},
      min = #{min,jdbcType=INTEGER},
      max = #{max,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=BIGINT},
      modified_by = #{modifiedBy,jdbcType=BIGINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithPageBounds" parameterType="com.bbd.domain.WarnSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_warn_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>