<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.dao.OpinionDao">
  <resultMap id="BaseResultMap" type="com.bbd.domain.Opinion">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="source_type" jdbcType="TINYINT" property="sourceType" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="hot" jdbcType="INTEGER" property="hot" />
    <result column="emotion" jdbcType="TINYINT" property="emotion" />
    <result column="similiar" jdbcType="INTEGER" property="similiar" />
    <result column="words" jdbcType="VARCHAR" property="words" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bbd.domain.Opinion">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="link" jdbcType="LONGVARCHAR" property="link" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, seq, uuid, title, summary, source, source_type, start_time, hot, emotion, similiar, 
    words, comment_count, gmt_create, gmt_modified
  </sql>
  <sql id="Blob_Column_List">
    content, link
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bbd.domain.OpinionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bbd_opinion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bbd.domain.OpinionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_opinion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bbd_opinion
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bbd_opinion
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bbd.domain.Opinion">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_opinion (seq, uuid, title, 
      summary, source, source_type, 
      start_time, hot, emotion, 
      similiar, words, comment_count, 
      gmt_create, gmt_modified, content, 
      link)
    values (#{seq,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{summary,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{sourceType,jdbcType=TINYINT}, 
      #{startTime,jdbcType=TIMESTAMP}, #{hot,jdbcType=INTEGER}, #{emotion,jdbcType=TINYINT}, 
      #{similiar,jdbcType=INTEGER}, #{words,jdbcType=VARCHAR}, #{commentCount,jdbcType=INTEGER}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}, 
      #{link,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bbd.domain.Opinion">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_opinion
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seq != null">
        seq,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="emotion != null">
        emotion,
      </if>
      <if test="similiar != null">
        similiar,
      </if>
      <if test="words != null">
        words,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="link != null">
        link,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seq != null">
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=TINYINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="emotion != null">
        #{emotion,jdbcType=TINYINT},
      </if>
      <if test="similiar != null">
        #{similiar,jdbcType=INTEGER},
      </if>
      <if test="words != null">
        #{words,jdbcType=VARCHAR},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update bbd_opinion
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.seq != null">
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceType != null">
        source_type = #{record.sourceType,jdbcType=TINYINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hot != null">
        hot = #{record.hot,jdbcType=INTEGER},
      </if>
      <if test="record.emotion != null">
        emotion = #{record.emotion,jdbcType=TINYINT},
      </if>
      <if test="record.similiar != null">
        similiar = #{record.similiar,jdbcType=INTEGER},
      </if>
      <if test="record.words != null">
        words = #{record.words,jdbcType=VARCHAR},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.link != null">
        link = #{record.link,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update bbd_opinion
    set id = #{record.id,jdbcType=BIGINT},
      seq = #{record.seq,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      source_type = #{record.sourceType,jdbcType=TINYINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      hot = #{record.hot,jdbcType=INTEGER},
      emotion = #{record.emotion,jdbcType=TINYINT},
      similiar = #{record.similiar,jdbcType=INTEGER},
      words = #{record.words,jdbcType=VARCHAR},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR},
      link = #{record.link,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbd_opinion
    set id = #{record.id,jdbcType=BIGINT},
      seq = #{record.seq,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      source_type = #{record.sourceType,jdbcType=TINYINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      hot = #{record.hot,jdbcType=INTEGER},
      emotion = #{record.emotion,jdbcType=TINYINT},
      similiar = #{record.similiar,jdbcType=INTEGER},
      words = #{record.words,jdbcType=VARCHAR},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbd.domain.Opinion">
    update bbd_opinion
    <set>
      <if test="seq != null">
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="sourceType != null">
        source_type = #{sourceType,jdbcType=TINYINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="emotion != null">
        emotion = #{emotion,jdbcType=TINYINT},
      </if>
      <if test="similiar != null">
        similiar = #{similiar,jdbcType=INTEGER},
      </if>
      <if test="words != null">
        words = #{words,jdbcType=VARCHAR},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bbd.domain.Opinion">
    update bbd_opinion
    set seq = #{seq,jdbcType=INTEGER},
      uuid = #{uuid,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      source_type = #{sourceType,jdbcType=TINYINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      hot = #{hot,jdbcType=INTEGER},
      emotion = #{emotion,jdbcType=TINYINT},
      similiar = #{similiar,jdbcType=INTEGER},
      words = #{words,jdbcType=VARCHAR},
      comment_count = #{commentCount,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR},
      link = #{link,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbd.domain.Opinion">
    update bbd_opinion
    set seq = #{seq,jdbcType=INTEGER},
      uuid = #{uuid,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      source_type = #{sourceType,jdbcType=TINYINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      hot = #{hot,jdbcType=INTEGER},
      emotion = #{emotion,jdbcType=TINYINT},
      similiar = #{similiar,jdbcType=INTEGER},
      words = #{words,jdbcType=VARCHAR},
      comment_count = #{commentCount,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithPageBounds" parameterType="com.bbd.domain.OpinionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_opinion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>